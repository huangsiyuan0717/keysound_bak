JS 相关的基础知识：
1. Variable :
    it is a container for a value
    to use a Variable you first have to declare it 
    var myName;
    let myName;
    const myName;
    before es6 you could just use var 
    after creating the Variable you must initialize the Variable, this is where you just give it a value, this is done with the equal sign
    var myName = "stan";
    you can use Variables all over the place in JS

    JS is a loosely typed languaue which means th at unlike some other languages you don't need to specifiy what data type a Variable will contain such as number or string or object or anything like that
    JS just figures it out for you

2. Data types
    there are seven data types in JS 
    //Boolean
    var data = true; 
    data = false;

    //null
    null is an assignment value that means no value
    var n = null;
    console.log(n*10);  --->the output will be 0
    console.log(n+10);  --->the output will be 10;
    so now since whenever you're doing math with something that's equal to null, that's just going to be the same as 0

    //undefine
    it is kind of similar to null,but not completely the same, it means a Variable has not been declared or it has been declared but it has not been assigned a value
    var a;
    console.log(a+1);   --->the output will be NaN
    it not nothing , its not a number, so you can't actually add or do math with something

    //Number 
    var a = 3.6;
    var b = 1;
    console.log(a+b);  //4.6

    //String 
    var name = "Stan";
    the final thing I want to tell you about Stirngs is that in JavaScript String values are immutable which means they cannot be altered once created, now you can assign a variable to a new String, but you can't actually change the original String,  we have sentence twice, so you can assign sentence to a new String but you can not actually change the original String like Arrays you can change an element in the Array but you can't change a character in the String after you created it
    var name = "abc";
    console.log(name[0]);  // "a"
    console.log(name[name.length -1]);  // "c"
    name[0] = "d";  ---> nothing is going to happen, the name is abc as well;
    //var name = "def";
    console.log(name);

    //Symbol
    a data type whose instances are unique and immutable
    var sym1 = Symbol("foo");
    var sym2 = Symbol("foo");
    console.log(sym1 === sym2); //false;
    console.log(String(sym1) === String(sym2)); //true;

    //Object 
    an object is just a collection of properties and the property is an association between a name or a key and a value
    var myCar = new Object();
    myCar.make = "Ford";
    myCar.model = "Mustang";
    console.log(myCar.make);

3. Functions
    demo1:
    var someVar = "hat"
    function myFun(){
        var someVar = "shoes";  // 局部变量只能在方法内部使用
        console.log(someVar); // "shoes"
    }

    myFun();
    console.log(someVar); // "hat" ---> 上面局部变量的value并没有影响全局变量

    demo2:
    console.log(addSquares(1,3)); // 10  在方法之前也可以调用
    function addSquares(a,b){
        function square(x){
            return x * x;
        }
        return square(a) + square(b);
    }
    addSquares(2,3); // 在方法之后调用

4. Hoisting
    console.log(definedLater);  // undefined
    var definedLater;
    definedLater = "I am defined!";  
    console.log(definedLater);  // I am defined!

5. comparison operators:
    console.log(3 == "3"); //true
    console.log(3 === "3"); //false

    console.log(true == "1"); //true
    console.log(true === "1"); //false

    console.log("This is a string" == new String("This is a string)); //true
    console.log("This is a string" === new String("This is a string)); //false

6. Array
    var sandwich = ["peanut butter", "jelly", "bread"];
    sandwich.forEach(function(element){
        console.log(element);
    });

7. deep copy:
    var deepCopy = JSON.parse(JSON.stringify(deepArray));
    //the `JSON.stringify()` is going to create a string of the whole array including an array within the array and objects with an array
    //then `JSON.parse()` is going to convert this string back into a JS object or JS array
    var deepCopy = JSON.parse(JSON.stringify(deepArray));
    deepCopy[0].push("is great");
    console.log(deepArray[0]);
    console.log(deepCopy[0]); 

8. Random numbers & parseInt
    Math.floor(Math.random() * 20); --->[0-20) ,会输出一个0（包含0）到 20（不包括20)的整数；

    function randomRange(min,max){
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

9, continue key word : 会忽略continue后面的代码，进入到下次循环，而break的话，会直接跳出循环。